<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="288"
   height="288"
   viewBox="0 0 288 288"
   version="1.1"
   id="svg1"
   inkscape:version="1.3 (0e150ed6c4, 2023-07-21)"
   sodipodi:docname="AlphaTauriLogo.svg"
   inkscape:export-filename="AlphaTauriLogo.png"
   inkscape:export-xdpi="96"
   inkscape:export-ydpi="96"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <sodipodi:namedview
     id="namedview1"
     pagecolor="#ffffff"
     bordercolor="#111111"
     borderopacity="1"
     inkscape:showpageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="1"
     inkscape:deskcolor="#d1d1d1"
     inkscape:document-units="px"
     inkscape:zoom="2.7416667"
     inkscape:cx="126.56535"
     inkscape:cy="120.18237"
     inkscape:window-width="2560"
     inkscape:window-height="1377"
     inkscape:window-x="2552"
     inkscape:window-y="-8"
     inkscape:window-maximized="1"
     inkscape:current-layer="svg1" />
  <defs
     id="defs1">
    <linearGradient
       id="linearGradient5"
       inkscape:label="Inverted Strong Purple">
      <stop
         style="stop-color:#8c25b7;stop-opacity:1;"
         offset="0"
         id="stop5" />
      <stop
         style="stop-color:#501563;stop-opacity:0.89620757;"
         offset="0.75421134"
         id="stop4" />
      <stop
         style="stop-color:#420f50;stop-opacity:0;"
         offset="1"
         id="stop3" />
    </linearGradient>
  </defs>
  <script
     id="mesh_polyfill"
     type="text/javascript">&#10;!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();&#10;</script>
  <path
     d="m 166.559,197.6372 c 0.9352,0.97768 2.06152,1.28584 3.34704,0.82896 v 16.95024 c 0,0 0,-0.032 -1.98712,-0.032 -15.00472,-0.34 -28.8728,-5.30283 -40.23376,-13.53902 6.17408,-5.75995 13.00728,-14.80343 17.04544,-23.66643 2.57192,0.0848 5.76048,0.04 10.05392,-0.45681 2.19904,-0.2552 3.49576,-0.276 5.69568,-0.3616 0.89272,-0.032 2.49744,-0.5632 2.25344,-2.21041 -0.136,-0.98832 -0.672,-2.34865 -1.08392,-3.41129 -0.488,-1.24337 1.11512,-1.95538 1.74232,-0.97769 0.36,0.5736 1.14792,2.43361 1.41352,3.05001 0.52,1.19025 1.92384,2.60362 2.94384,3.34754 0.87112,0.6376 1.81664,1.13721 2.83744,1.50905 2.05104,0.7336 3.84696,1.92353 5.41968,3.42193 0.488,0.4672 0.92472,0.99897 1.32872,1.54097 1.41272,1.84913 1.80632,2.76297 -0.152,4.98395 -1.76472,2.00856 -3.91096,3.22009 -6.53568,3.59201 -1.76464,0.2448 -3.12456,-0.3296 -3.87896,-2.04049 -0.136,-0.308 -0.312,-0.6056 -0.48,-0.9032 -0.328,-0.5848 -0.648,-1.19025 -1.0312,-1.75353 -0.544,-0.80761 -1.29592,-1.26457 -2.30544,-1.10521 -1.62632,0.2448 -3.24144,0.4992 -4.85736,0.80769 -0.272,0.056 -0.94552,0.4888 -0.768,0.6376 0.86072,1.48785 1.80624,2.83753 2.90144,4.05962 0.52,0.5848 1.14712,0.86081 1.95504,0.82897 1.57272,-0.064 1.63672,0 2.28472,1.424 0.304,0.6696 0.608,1.3496 0.97752,1.97657 0.312,0.5312 0.68,1.04144 1.10552,1.49841 m 5.93008,-13.91087 c -1.44552,0.056 -2.85904,0.3192 -4.34616,0.6696 0.08,1.30713 0.512,2.39121 0.9984,3.45378 0.432,0.93513 0.87192,1.19025 1.88144,1.06265 0.552,-0.072 1.11592,-0.2448 1.60472,-0.49921 0.97752,-0.5528 1.32792,-1.50905 1.07272,-2.61433 -0.168,-0.7336 -0.528,-1.36025 -1.21112,-2.07225 m 41.29776,-21.15866 c -0.392,-1.2328 -1.1056,-2.22113 -2.13672,-2.99697 -0.86072,-0.6376 -1.71032,-1.28593 -2.60304,-1.89161 -0.368,-0.2552 -0.808,-0.3928 -1.23272,-0.56321 -0.544,-0.2232 -0.9992,-0.04 -1.34952,0.40401 -0.312,0.404 -0.56,0.85016 -0.8824,1.254 -0.384,0.49921 -0.90312,0.63761 -1.50872,0.45681 -0.552,-0.1592 -0.83992,-0.59521 -0.86072,-1.30713 0,-0.2872 0,-0.5848 0.08,-0.85025 0.48,-1.89152 1.26472,-3.63433 2.46544,-5.17522 0.168,-0.2232 0.384,-0.4144 0.608,-0.5848 0.584,-0.4464 1.13752,-0.4248 1.70072,0.024 2.02944,2.05105 3.76136,3.6877 5.61088,5.18586 1.99744,1.61537 2.5398,3.93202 2.8902,6.28059 -0.08,0.34 -0.08,0.62721 -0.168,0.88209 -0.152,0.3936 -0.45596,0.6376 -0.90316,0.6696 -0.408,0.032 -0.81832,-0.008 -1.04152,-0.404 -0.248,-0.436 -0.48,-0.90328 -0.64,-1.38145 m -4.13424,11.00965 c 0.776,-0.2128 1.29672,0.2232 1.41352,1.02017 0.08,0.34 0.08,0.6696 0.08,0.82896 0,2.25289 -0.624,3.32634 -3.29416,3.51762 -1.116,-0.064 -1.44552,-0.3616 -1.55112,-0.93513 -0.248,-1.45592 0.192,-2.69929 1.38152,-3.56017 0.576,-0.42481 1.29592,-0.66961 1.99744,-0.87137 M 288,72.58 271.38976,118.6685 h -21.19088 v 25.32436 c 0,0.68001 0,1.36025 0,2.04042 -0.264,37.78009 -30.62704,68.416 -68.12972,69.33016 l -3.49664,0.056 v -21.0205 l 1.27512,-0.5632 c 1.06312,-0.4464 1.97672,-1.07336 2.57184,-2.10425 0.672,-1.13705 1.65832,-1.59409 2.98624,-1.58345 1.82792,0.008 2.16792,-0.3296 2.51904,-2.06153 0.32,-1.89169 0.56,-3.46441 0.8928,-5.01618 0.304,-1.45593 0.152,-2.82689 -0.656,-4.08082 -1.42392,-2.24225 -2.84784,-4.49514 -4.33576,-6.69491 -1.03112,-1.50905 -1.57272,-1.58345 -2.97584,-0.3192 l 1.2856,2.39113 c 1.02072,1.42401 2.06224,2.84809 3.05016,4.30386 0.32,0.4568 0.608,0.9884 0.688,1.51969 0.376,2.25296 0,4.41026 -1.05272,6.41882 -0.136,0.2448 -0.48,0.3824 -0.8,0.61681 -0.184,-0.372 -0.36,-0.60561 -0.416,-0.86073 -0.088,-0.5104 -0.136,-1.02024 -0.128,-1.53032 0,-1.88105 -0.608,-3.5177 -1.79592,-5.00522 -1.45592,-1.80658 -2.80544,-3.69834 -4.16536,-5.57931 -1.32872,-1.81721 -1.15832,-3.74074 0.448,-5.34531 0.688,-0.6696 1.41352,-1.30713 2.12552,-1.96601 0.98792,-0.89264 1.72152,-1.95537 2.16784,-3.19881 0.352,-0.95649 0.672,-1.93409 0.8928,-2.92234 0.544,-2.44433 0.688,-4.93106 0.656,-7.43907 v -1.87041 c 0,-0.4672 0.168,-0.882 0.496,-1.22208 0.528,-0.54161 1.34952,-0.49921 1.75352,0.1488 0.232,0.372 0.424,0.7968 0.52,1.23272 0.488,2.16793 0.752,4.35722 0.512,6.57827 -0.312,2.77361 -0.87192,5.47291 -1.71112,8.12972 -0.168,0.5208 -0.456,1.02024 -0.328,1.70041 0.44,0 0.8184,0.04 1.2008,0 0.784,-0.096 1.57272,-0.2552 2.35904,-0.3504 2.67824,-0.2976 5.00536,-1.30713 6.886,-3.29434 0.8616,-0.90328 1.80712,-1.72161 2.72064,-2.58241 0.352,-0.3296 0.752,-0.4888 1.23272,-0.2872 0.448,0.1912 0.712,0.68 0.56,1.28584 -0.152,0.65921 -0.344,1.31777 -0.64,1.92353 -0.488,1.02017 -1.0304,2.01921 -1.64712,2.96482 -1.30712,1.99792 -2.41192,4.09146 -3.25184,6.3337 -0.512,1.38153 -1.10472,2.73114 -1.58312,4.11267 -0.48,1.40272 -0.136,1.79593 1.27512,1.61529 1.12632,-0.1384 1.43432,0.1064 1.50872,1.22216 0,0.4464 0,0.9032 0,1.3496 0,0.5104 0,1.03081 0.088,1.53033 0.352,2.02969 2.57184,3.32634 4.49576,2.61425 0.90312,-0.34 1.75352,-0.7968 2.60304,-1.24336 0.648,-0.3504 1.25432,-0.77601 1.88152,-1.16897 1.74232,-1.10528 3.64456,-1.80665 5.71728,-1.97673 0.85032,-0.064 1.69992,-0.064 2.55024,-0.04 1.46632,0.056 2.63584,-0.4888 3.5814,-1.60472 0.512,-0.5952 1.04152,-1.2008 1.63664,-1.72153 1.0096,-0.90328 1.76392,-0.96704 2.92224,-0.2448 0.9144,0.56321 1.78552,1.21161 2.66792,1.82793 1.39192,0.97768 2.84784,1.85977 4.42056,2.51857 1.42392,0.5952 2.90136,0.96713 4.46288,0.80768 0.2,-0.032 0.384,-0.1272 0.744,-0.2552 -0.368,-0.34 -0.592,-0.5848 -0.8504,-0.776 -0.712,-0.55281 -1.49824,-1.03089 -2.16784,-1.63657 -0.95592,-0.87144 -1.91272,-1.77472 -2.75184,-2.76297 -1.06312,-1.24345 -2.03032,-2.57177 -3.01824,-3.88962 -0.584,-0.7656 -1.16872,-1.53033 -1.66872,-2.34857 -0.248,-0.4144 -0.368,-0.94576 -0.408,-1.43465 -0.08,-0.68 0.616,-1.15832 1.2648,-0.91384 0.472,0.1808 0.93512,0.4464 1.29672,0.776 1.33912,1.23273 2.64624,2.48673 3.94216,3.75138 0.80792,0.79681 1.55192,1.65785 2.37024,2.43361 0.9456,0.90329 1.98712,1.68969 3.26224,2.09353 1.38152,0.42481 2.13592,0.41441 3.84696,-0.2448 0.192,-0.2336 -0.88152,-0.7224 -0.88152,-0.7224 -3.60304,-1.82785 -6.27008,-4.28266 -8.61872,-7.57724 -1.61512,-2.27417 -2.92224,-4.71842 -4.07016,-7.24779 -1.32872,-2.94362 -2.30632,-6.02547 -3.39024,-9.06477 -1.31752,-3.67713 -2.64624,-7.34323 -4.02776,-10.99917 -0.91352,-2.41233 -2.359,-4.50578 -3.97412,-6.50363 -2.13592,-2.62489 -4.76136,-4.6761 -7.5132,-6.58891 -2.79504,-1.95537 -5.79168,-3.5389 -8.76752,-5.19674 -4.95176,-2.74178 -10.12744,-5.06923 -14.8888,-8.16164 -0.81832,-0.4784 -1.20072,-0.6696 -1.58312,-0.82896 -0.184,-0.072 -0.82872,-0.3296 -1.49832,-0.49921 l -0.80792,-0.1488 V 72.584 Z m -108.18436,57.25904 c -0.352,-0.276 -0.68,-0.6056 -0.93512,-0.96705 -0.392,-0.5528 -0.392,-1.16896 -0.08,-1.76409 0.328,-0.5848 0.86072,-0.88208 1.54072,-0.87144 0.28,0.008 0.576,0.032 0.82952,0.1384 0.576,0.2232 1.16872,0.436 1.68952,0.7656 2.51824,1.61537 4.53736,3.71954 6.00368,6.32316 0.648,1.14768 0.98872,2.43353 0.99912,3.44305 -0.08,0.43601 0,0.98832 -0.584,1.24329 -0.416,0.1704 -0.8608,-0.008 -1.2328,-0.62721 -1.58384,-2.64617 -3.87896,-4.53786 -6.3444,-6.27011 -0.648,-0.4568 -1.29672,-0.91384 -1.90232,-1.41336 m -59.32072,66.00559 c -1.13752,1.07336 -2.30624,2.11481 -3.50696,3.11369 -1.21192,1.00961 -2.45512,1.96601 -3.73024,2.89058 C 101.47756,210.37198 87.02476,215.42 71.4136,215.42 32.03904,215.42 0,183.36937 0,143.99502 0,104.60988 32.03904,72.58104 71.4136,72.58104 c 15.61116,0 30.06396,5.026792 41.82804,13.560272 -10.90336,10.605648 -18.83176,24.261718 -22.38112,39.586428 -4.87736,-5.18586 -11.78496,-8.4274 -19.44692,-8.4274 -14.71912,0 -26.69528,11.97662 -26.69528,26.69524 0,14.71863 11.97616,26.69525 26.69528,26.69525 7.66196,0 14.56956,-3.24122 19.44692,-8.4274 1.43512,-1.51961 2.68864,-3.20937 3.74056,-5.04795 2.23192,-3.90017 3.51824,-8.40587 3.51824,-13.22022 0,-20.40393 8.59712,-38.83018 22.35952,-51.8588 1.1368,-1.073284 2.30552,-2.104088 3.50704,-3.102976 1.21112,-1.009604 2.45424,-1.966008 3.72936,-2.890572 11.76416,-8.53348 26.13216,-13.560192 42.23128,-13.560192 v 43.68905 c 0,0 -0.328,0.3296 -0.90312,0.57361 -0.256,0.1064 -1.47752,0.5104 -2.45512,0.616 -6.4612,0.712 -12.24248,3.7513 -16.48224,8.26796 -1.43512,1.51968 -2.68864,3.22009 -3.74064,5.03738 -2.23184,3.91074 -3.51816,8.41676 -3.51816,13.2307 0,20.39346 -8.59712,38.83018 -22.3588,51.85073"
     id="path9-9"
     style="display:inline;fill:#ffffff;fill-opacity:1;stroke-width:2.72053"
     inkscape:export-filename=".\path9-9.png"
     inkscape:export-xdpi="96"
     inkscape:export-ydpi="96" />
</svg>
