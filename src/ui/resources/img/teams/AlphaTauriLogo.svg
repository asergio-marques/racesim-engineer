<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="72"
   height="72"
   viewBox="0 0 72 72"
   version="1.1"
   id="svg1"
   inkscape:version="1.3 (0e150ed6c4, 2023-07-21)"
   sodipodi:docname="AlphaTauriLogo.svg"
   inkscape:export-filename="fastest_lap"
   inkscape:export-xdpi="96"
   inkscape:export-ydpi="96"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <sodipodi:namedview
     id="namedview1"
     pagecolor="#ffffff"
     bordercolor="#111111"
     borderopacity="1"
     inkscape:showpageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="1"
     inkscape:deskcolor="#d1d1d1"
     inkscape:document-units="px"
     inkscape:zoom="2.7416667"
     inkscape:cx="126.38298"
     inkscape:cy="120.18237"
     inkscape:window-width="1920"
     inkscape:window-height="1017"
     inkscape:window-x="1912"
     inkscape:window-y="-8"
     inkscape:window-maximized="1"
     inkscape:current-layer="svg1" />
  <defs
     id="defs1">
    <linearGradient
       id="linearGradient5"
       inkscape:label="Inverted Strong Purple">
      <stop
         style="stop-color:#8c25b7;stop-opacity:1;"
         offset="0"
         id="stop5" />
      <stop
         style="stop-color:#501563;stop-opacity:0.89620757;"
         offset="0.75421134"
         id="stop4" />
      <stop
         style="stop-color:#420f50;stop-opacity:0;"
         offset="1"
         id="stop3" />
    </linearGradient>
  </defs>
  <script
     id="mesh_polyfill"
     type="text/javascript">&#10;!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();&#10;</script>
  <path
     d="m 41.63975,49.409299 c 0.2338,0.244421 0.51538,0.321461 0.83676,0.207241 v 4.23756 c 0,0 0,-0.008 -0.49678,-0.008 -3.75118,-0.085 -7.2182,-1.325707 -10.05844,-3.384756 1.54352,-1.439987 3.25182,-3.700857 4.26136,-5.916607 0.64298,0.0212 1.44012,0.01 2.51348,-0.114201 0.54976,-0.0638 0.87394,-0.069 1.42392,-0.0904 0.22318,-0.008 0.62436,-0.140801 0.56336,-0.552603 -0.034,-0.247081 -0.168,-0.587163 -0.27098,-0.852824 -0.122,-0.310842 0.27878,-0.488843 0.43558,-0.244422 0.09,0.143401 0.28698,0.608403 0.35338,0.762504 0.13,0.297562 0.48096,0.650903 0.73596,0.836884 0.21778,0.159401 0.45416,0.284302 0.70936,0.377262 0.51276,0.183401 0.96174,0.480882 1.35492,0.855483 0.122,0.116801 0.23118,0.249742 0.33218,0.385242 0.35318,0.462283 0.45158,0.690744 -0.038,1.245987 -0.44118,0.502142 -0.97774,0.805024 -1.63392,0.898004 -0.44116,0.0612 -0.78114,-0.0824 -0.96974,-0.510122 -0.034,-0.077 -0.078,-0.151401 -0.12,-0.225802 -0.082,-0.1462 -0.162,-0.297561 -0.2578,-0.438382 -0.136,-0.201901 -0.32398,-0.316141 -0.57636,-0.276301 -0.40658,0.0612 -0.81036,0.1248 -1.21434,0.201921 -0.068,0.014 -0.23638,0.1222 -0.192,0.159401 0.21518,0.371961 0.45156,0.709383 0.72536,1.014905 0.13,0.1462 0.28678,0.215201 0.48876,0.207241 0.39318,-0.016 0.40918,0 0.57118,0.356002 0.076,0.1674 0.152,0.3374 0.24438,0.494141 0.078,0.132801 0.17,0.260361 0.27638,0.374602 m 1.48252,-3.477716 c -0.36138,0.014 -0.71476,0.0798 -1.08654,0.1674 0.02,0.326782 0.128,0.597803 0.2496,0.863445 0.108,0.233781 0.21798,0.297561 0.47036,0.265661 0.138,-0.018 0.27898,-0.0612 0.40118,-0.124801 0.24438,-0.1382 0.33198,-0.377262 0.26818,-0.653583 -0.042,-0.183401 -0.132,-0.340062 -0.30278,-0.518062 m 10.32444,-5.289665 c -0.098,-0.308201 -0.2764,-0.555283 -0.53418,-0.749244 -0.21518,-0.1594 -0.42758,-0.321481 -0.65076,-0.472902 -0.092,-0.0638 -0.202,-0.0982 -0.30818,-0.140801 -0.136,-0.0558 -0.2498,-0.01 -0.33738,0.101001 -0.078,0.101 -0.14,0.212541 -0.2206,0.313501 -0.096,0.124801 -0.22578,0.159401 -0.37718,0.114201 -0.138,-0.0398 -0.20998,-0.148801 -0.21518,-0.326782 0,-0.0718 0,-0.1462 0.02,-0.212561 0.12,-0.472882 0.31618,-0.908584 0.61636,-1.293806 0.042,-0.0558 0.096,-0.1036 0.152,-0.1462 0.146,-0.1116 0.28438,-0.1062 0.42518,0.006 0.50736,0.512762 0.94034,0.921924 1.40272,1.296466 0.49936,0.403842 0.63495,0.983005 0.72255,1.570147 -0.02,0.085 -0.02,0.156801 -0.042,0.220522 -0.038,0.0984 -0.11399,0.1594 -0.22579,0.1674 -0.102,0.008 -0.20458,-0.002 -0.26038,-0.101 -0.062,-0.109001 -0.12,-0.225821 -0.16,-0.345362 m -1.03356,2.752413 c 0.194,-0.0532 0.32418,0.0558 0.35338,0.255041 0.02,0.085 0.02,0.167401 0.02,0.207241 0,0.563223 -0.156,0.831584 -0.82354,0.879405 -0.279,-0.016 -0.36138,-0.0904 -0.38778,-0.233782 -0.062,-0.363981 0.048,-0.674823 0.34538,-0.890044 0.144,-0.106201 0.32398,-0.167401 0.49936,-0.217841 M 72,18.145 67.84744,29.667126 h -5.29772 v 6.33109 c 0,0.170001 0,0.340062 0,0.510103 -0.066,9.445024 -7.65676,17.104 -17.03243,17.332541 l -0.87416,0.014 v -5.255124 l 0.31878,-0.140801 c 0.26578,-0.1116 0.49418,-0.268341 0.64296,-0.526063 0.168,-0.284261 0.41458,-0.398522 0.74656,-0.395861 0.45698,0.002 0.54198,-0.0824 0.62976,-0.515383 0.08,-0.472922 0.14,-0.866104 0.2232,-1.254046 0.076,-0.363982 0.038,-0.706723 -0.164,-1.020204 -0.35598,-0.560563 -0.71196,-1.123786 -1.08394,-1.673729 -0.25778,-0.377262 -0.39318,-0.395862 -0.74396,-0.0798 l 0.3214,0.597783 c 0.25518,0.356002 0.51556,0.712023 0.76254,1.075965 0.08,0.114201 0.152,0.247101 0.172,0.379922 0.094,0.563242 0,1.102565 -0.26318,1.604707 -0.034,0.0612 -0.12,0.0956 -0.2,0.154201 -0.046,-0.093 -0.09,-0.151401 -0.104,-0.215181 -0.022,-0.127601 -0.034,-0.255061 -0.032,-0.382582 0,-0.470262 -0.152,-0.879424 -0.44898,-1.251305 -0.36398,-0.451643 -0.70136,-0.924585 -1.04134,-1.394827 -0.33218,-0.454303 -0.28958,-0.935185 0.112,-1.336327 0.172,-0.167401 0.35338,-0.326782 0.53138,-0.491502 0.24698,-0.223161 0.43038,-0.488842 0.54196,-0.799703 0.088,-0.239122 0.168,-0.483523 0.2232,-0.730584 0.136,-0.611083 0.172,-1.232766 0.164,-1.859769 v -0.467602 c 0,-0.1168 0.042,-0.220501 0.124,-0.305521 0.132,-0.135401 0.33738,-0.124801 0.43838,0.0372 0.058,0.093 0.106,0.199201 0.13,0.308182 0.122,0.541981 0.188,1.089304 0.128,1.644567 -0.078,0.693403 -0.21798,1.368227 -0.42778,2.032429 -0.042,0.130201 -0.114,0.255061 -0.082,0.425102 0.11,0 0.2046,0.01 0.3002,0 0.196,-0.024 0.39318,-0.0638 0.58976,-0.0876 0.66956,-0.0744 1.25134,-0.326782 1.7215,-0.823584 0.2154,-0.225821 0.45178,-0.430402 0.68016,-0.645603 0.088,-0.0824 0.188,-0.1222 0.30818,-0.0718 0.112,0.0478 0.178,0.170001 0.14,0.321461 -0.038,0.164801 -0.086,0.329442 -0.16,0.480883 -0.122,0.255041 -0.2576,0.504801 -0.41178,0.741203 -0.32678,0.499482 -0.60298,1.022865 -0.81296,1.583427 -0.128,0.345382 -0.27618,0.682784 -0.39578,1.028166 -0.12,0.350681 -0.034,0.448982 0.31878,0.403822 0.28158,-0.0346 0.35858,0.0266 0.37718,0.30554 0,0.111601 0,0.225801 0,0.337402 0,0.1276 0,0.257701 0.022,0.382582 0.088,0.507422 0.64296,0.831584 1.12394,0.653563 0.22578,-0.085 0.43838,-0.199201 0.65076,-0.310842 0.162,-0.0876 0.31358,-0.194001 0.47038,-0.292241 0.43558,-0.276321 0.91114,-0.451662 1.42932,-0.494182 0.21258,-0.016 0.42498,-0.016 0.63756,-0.01 0.36658,0.014 0.65896,-0.1222 0.89535,-0.401181 0.128,-0.1488 0.26038,-0.300201 0.40916,-0.430382 0.2524,-0.225821 0.44098,-0.241761 0.73056,-0.0612 0.2286,0.140801 0.44638,0.302902 0.66698,0.456982 0.34798,0.244421 0.71196,0.464942 1.10514,0.629642 0.35598,0.148801 0.72534,0.241782 1.11572,0.201921 0.05,-0.008 0.096,-0.0318 0.186,-0.0638 -0.092,-0.085 -0.148,-0.146201 -0.2126,-0.194001 -0.178,-0.138201 -0.37456,-0.257721 -0.54196,-0.409142 -0.23898,-0.21786 -0.47818,-0.443681 -0.68796,-0.690742 -0.26578,-0.310862 -0.50758,-0.642944 -0.75456,-0.972405 -0.146,-0.191401 -0.29218,-0.382582 -0.41718,-0.587143 -0.062,-0.103601 -0.092,-0.236441 -0.102,-0.358662 -0.02,-0.170001 0.154,-0.289581 0.3162,-0.228461 0.118,0.0452 0.23378,0.111601 0.32418,0.194001 0.33478,0.308181 0.66156,0.621683 0.98554,0.937845 0.20198,0.199201 0.38798,0.414462 0.59256,0.608403 0.2364,0.225821 0.49678,0.422422 0.81556,0.523382 0.34538,0.106201 0.53398,0.103601 0.96174,-0.0612 0.048,-0.0584 -0.22038,-0.180601 -0.22038,-0.180601 C 58.51856,43.977495 57.8518,43.363792 57.26464,42.540148 56.86086,41.971605 56.53408,41.360543 56.2471,40.7282 55.91492,39.992296 55.67052,39.221832 55.39954,38.462008 55.07016,37.542725 54.73798,36.6262 54.3926,35.712216 54.16422,35.109133 53.80285,34.58577 53.39907,34.086308 c -0.53398,-0.656223 -1.19034,-1.169025 -1.8783,-1.647228 -0.69876,-0.488842 -1.44792,-0.884724 -2.19188,-1.299186 -1.23794,-0.685443 -2.53186,-1.267306 -3.7222,-2.040409 -0.20458,-0.119601 -0.30018,-0.167401 -0.39578,-0.207241 -0.046,-0.018 -0.20718,-0.0824 -0.37458,-0.124801 l -0.20198,-0.0372 V 18.146 Z M 44.95391,32.459759 c -0.088,-0.069 -0.17,-0.1514 -0.23378,-0.241761 -0.098,-0.138201 -0.098,-0.292241 -0.02,-0.441022 0.082,-0.146201 0.21518,-0.220521 0.38518,-0.217861 0.07,0.002 0.144,0.008 0.20738,0.0346 0.144,0.0558 0.29218,0.109001 0.42238,0.191401 0.62956,0.403842 1.13434,0.929885 1.50092,1.580788 0.162,0.286921 0.24718,0.608383 0.24978,0.860764 -0.02,0.109001 0,0.24708 -0.146,0.310821 -0.104,0.0426 -0.2152,-0.002 -0.3082,-0.156801 -0.39596,-0.661542 -0.96974,-1.134465 -1.5861,-1.567527 -0.162,-0.1142 -0.32418,-0.228461 -0.47558,-0.353342 M 30.11971,48.961217 c -0.28438,0.268341 -0.57656,0.528702 -0.87674,0.778423 -0.30298,0.252402 -0.61378,0.491503 -0.93256,0.722644 C 25.36939,52.592994 21.75619,53.855 17.8534,53.855 8.00976,53.855 0,45.842342 0,35.998756 0,26.15247 8.00976,18.14526 17.8534,18.14526 c 3.90279,0 7.51599,1.256698 10.45701,3.390068 -2.72584,2.651412 -4.70794,6.065429 -5.59528,9.896606 -1.21934,-1.296465 -2.94624,-2.106849 -4.86173,-2.106849 -3.67978,0 -6.67382,2.994154 -6.67382,6.673811 0,3.679657 2.99404,6.673811 6.67382,6.673811 1.91549,0 3.64239,-0.810304 4.86173,-2.106849 0.35878,-0.379902 0.67216,-0.802344 0.93514,-1.261987 0.55798,-0.975044 0.87956,-2.101469 0.87956,-3.305055 0,-5.100984 2.14928,-9.707546 5.58988,-12.964701 0.2842,-0.268321 0.57638,-0.526022 0.87676,-0.775744 0.30278,-0.252401 0.61356,-0.491502 0.93234,-0.722643 2.94104,-2.13337 6.53304,-3.390048 10.55782,-3.390048 v 10.922263 c 0,0 -0.082,0.0824 -0.22578,0.143401 -0.064,0.0266 -0.36938,0.127601 -0.61378,0.154001 -1.6153,0.178001 -3.06062,0.937825 -4.12056,2.066989 -0.35878,0.379922 -0.67216,0.805024 -0.93516,1.259347 -0.55796,0.977684 -0.87954,2.104189 -0.87954,3.307675 0,5.098364 -2.14928,9.707545 -5.5897,12.962681"
     id="path9-9"
     style="display:inline;fill:#ffffff;fill-opacity:1;stroke-width:0.680132"
     inkscape:export-filename=".\path9-9.png"
     inkscape:export-xdpi="96"
     inkscape:export-ydpi="96" />
</svg>
