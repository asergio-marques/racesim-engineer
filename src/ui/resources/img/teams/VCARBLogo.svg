<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="72"
   height="72"
   viewBox="0 0 72 72"
   version="1.1"
   id="svg1"
   inkscape:version="1.3 (0e150ed6c4, 2023-07-21)"
   sodipodi:docname="VCARBLogo.svg"
   inkscape:export-filename="VCARBLogo.png"
   inkscape:export-xdpi="96"
   inkscape:export-ydpi="96"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <sodipodi:namedview
     id="namedview1"
     pagecolor="#ffffff"
     bordercolor="#111111"
     borderopacity="1"
     inkscape:showpageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="1"
     inkscape:deskcolor="#d1d1d1"
     inkscape:document-units="px"
     inkscape:zoom="5.4833334"
     inkscape:cx="66.200607"
     inkscape:cy="58.449847"
     inkscape:window-width="1920"
     inkscape:window-height="1017"
     inkscape:window-x="1912"
     inkscape:window-y="-8"
     inkscape:window-maximized="1"
     inkscape:current-layer="svg1" />
  <defs
     id="defs1">
    <linearGradient
       id="linearGradient5"
       inkscape:label="Inverted Strong Purple">
      <stop
         style="stop-color:#8c25b7;stop-opacity:1;"
         offset="0"
         id="stop5" />
      <stop
         style="stop-color:#501563;stop-opacity:0.89620757;"
         offset="0.75421134"
         id="stop4" />
      <stop
         style="stop-color:#420f50;stop-opacity:0;"
         offset="1"
         id="stop3" />
    </linearGradient>
    <clipPath
       id="SVGID_00000031200753187932598880000001150051991276243373_">&#10;		<rect
   id="use7"
   x="15"
   y="8.6000004"
   width="1020"
   height="332.79999"
   style="stroke-width:3.4" />
&#10;	</clipPath>
  </defs>
  <script
     id="mesh_polyfill"
     type="text/javascript">&#10;!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();&#10;</script>
  <path
     style="fill:#8b8f91;stroke-width:11.56"
     d="m 404,184.2 c -0.8,0.5 -1.6,0.9 -2.4,1.4 v -21.5 c 1.7,-1.7 3.2,-3.5 4.6,-5.3 7.1,-9.5 6.3,-24.3 -1.6,-33 -0.9,-1 -1.9,-1.9 -3,-2.8 V 8.6 h 70.1 c 31.9,0 57.8,25.4 57.8,56.7 0,26.7 -18.7,49 -44,55.1 l 14.1,20 c -0.3,0.3 -0.6,0.5 -0.8,0.8 -11.9,0.1 -21.3,3.5 -30.3,10.8 l -0.3,0.2 -0.2,0.2 c -1.2,1.1 -2.3,2.1 -3.5,3.1 L 453,137.7 V 91.8 h 9.5 c 15.1,0 27.3,-11.2 27.3,-25.1 0,-13.9 -11.4,-25.1 -26.5,-25.1 h -20.8 v 122 c -1.8,0.3 -3.5,0.6 -6.3,1.3 -9.6,2.2 -18.3,9 -25.3,14.4 -3.8,3 -4.9,3.7 -5.2,3.9 -0.6,0.3 -1.2,0.7 -1.7,1 m 151.2,-73.7 0.4,-0.2 0.5,-0.2 c 4.9,-2.1 10.6,-3.2 16.5,-3.2 4.3,0 8.6,0.7 12.3,1.9 V 41.6 h 25.6 c 11.2,0 20.3,10.3 20.3,21.5 0,11.2 -9.1,20.3 -20.3,20.3 h -13.3 v 31.1 c 1,0.7 2.1,1.4 3.4,2.3 l 0.4,0.3 1,0.8 h 19.7 c 13.6,0 23.9,11 23.9,24.6 -0.2,4.7 -1.3,8.9 -3.2,12.5 5.7,6.9 12.8,16.1 17,22.9 l 0.2,0.3 c 1.8,3.1 3.5,7.2 4.6,10.9 14.1,-10.1 23.2,-25.9 23.2,-43.6 0,-21.9 -7.7,-37.4 -33.5,-49.4 10.5,-9.8 16.9,-22.9 16.9,-37.3 0,-13.1 -5,-25.1 -13.8,-34.5 C 647.9,14.2 631.7,8.6 609.8,8.6 H 544 v 108.7 c 1.1,-0.7 2.3,-1.4 3.5,-2.2 2.4,-1.5 4.9,-3.2 7.7,-4.6 m -22,161.9 c 1.1,2.4 2.1,4.6 3.2,4.9 0.5,0.1 1,0.2 1.6,0.2 2.5,0 6.1,-1.4 8.6,-3.4 1.4,-1.2 1,-2 0.3,-3.1 -0.2,-0.3 -0.4,-0.7 -0.7,-1.2 -0.7,-1.3 -1.1,-2.7 -1.4,-3.9 -0.7,-2.5 -1.3,-4.6 -3.9,-4.2 -3.8,0.5 -7.4,0.8 -11.5,0.8 -0.1,0 -1.3,0 -1.7,0.9 -0.5,1 0.6,2 1.7,3 0.6,0.6 1.3,1.2 1.7,1.8 0.6,1.1 1.4,2.7 2.1,4.2 m -189,8.3 c -0.1,0 -0.3,0 -0.4,0.1 -2.2,0.9 -4.7,3.7 -4.8,5.4 -0.5,7.3 -0.8,8.1 -2.7,10.3 -0.6,0.6 -0.9,2.1 -0.3,2.7 0.6,0.6 7.7,2.8 8.5,2.8 h 0.2 c 0.6,-0.2 1.2,-1.8 2.6,-6.9 0.8,-2.7 1.7,-5.8 2.7,-8.6 0.1,-0.2 0.1,-0.4 -0.6,-1.4 -0.8,-1.2 -3.6,-4.4 -5.2,-4.4 m 346,-10.3 c -0.1,0.7 -0.6,1.2 -1.4,1.3 -0.9,0.2 -1.8,0.3 -2.8,0.3 -7.3,0 -15,-5.8 -18,-11.2 -4,-7.3 -7.3,-11.6 -13.2,-13.7 v 0 c 0.6,1.2 1.3,2.3 2.1,3.4 0.5,0.6 0.9,1.3 1.3,1.9 1.9,3.2 4.6,7.9 6,12.6 1.3,4.4 6,7.7 10.3,10.4 l 5.4,2.9 c 1.1,0.5 1.7,1.3 1.6,2 -0.1,0.6 -0.3,1.1 -1.3,1.4 l -1,0.1 h -1.1 c -9.7,0 -17.5,-3.3 -23.8,-10.1 -1.9,-2.1 -3.8,-3.2 -5.7,-3.2 -4.3,3.8 -8.7,7.6 -14.6,8 -7.3,-1.2 -13.4,-0.8 -18,1.2 -0.8,0.3 -1.5,0.5 -2.3,0.8 -4.2,1.5 -8.5,3.1 -13.3,3.3 -2.6,0 -5.9,-1.3 -6.8,-3.9 -0.3,-1.1 -0.2,-2.1 -0.6,-3.4 -0.6,-2.3 -1.1,-4.7 0.2,-6.9 l 3.6,-5.4 c 0,-0.5 -0.4,-0.9 -0.9,-1 -0.5,-0.1 -1.1,0.2 -1.7,0.4 -0.6,0.2 -1.1,0.5 -1.6,0.5 -1.6,-0.1 -1.5,-1.6 -1.5,-1.6 0.2,-4.2 3.6,-7.5 6.8,-10.4 0.9,-0.8 1.8,-1.6 2.6,-2.5 0.9,-4.6 2.7,-8.4 5.6,-11.7 -0.1,-0.3 -0.3,-0.6 -0.7,-0.8 l -3.3,0.6 c -3.5,0.7 -7.1,1.3 -10.9,1.3 -5,2.6 -11.9,3.4 -13.8,2.1 0,0 -0.8,-0.6 -0.9,-1.3 -0.1,-0.7 0.1,-1.5 0.3,-1.9 4.9,-6.8 6.8,-15.4 5.4,-23.6 -0.1,-0.7 -0.4,-0.9 -0.8,-0.9 -0.6,0 -0.8,0.7 -0.9,1.1 -1.5,8.6 -3.9,14.9 -7.8,20.9 -1.3,2 -4.9,2.8 -8.4,3.5 -1.5,0.3 -2.8,0.5 -4.3,1.1 -0.8,0.3 -1.9,1.1 -1.9,2.3 -0.1,2.5 1.2,4.7 2.5,6.7 l 0.2,0.2 c 0.3,0.6 8.6,14.2 8.9,17 0.3,2.4 -0.8,9.8 -1.8,12.9 -0.3,1.1 0.2,1.2 0.3,1.2 0.2,0 0.5,-0.1 0.9,-0.4 1.4,-1 6.3,-8.5 6.7,-10.8 0.4,-2.3 -0.3,-3.8 -1,-5.3 l -9.8,-19.4 0.1,-0.2 c 0.5,-1 1.8,-1.6 3.6,-1.7 h 0.2 c 1.6,0 3,0.5 4.3,1.1 0.6,0.2 1.3,0.5 1.9,0.7 h 0.2 l 0.1,0.2 c 2.2,5.9 3.2,8.2 8.6,16.9 1.8,2.9 1.8,6.6 0,10.3 -2,4.2 -4.4,8.2 -7.1,12.1 -2.2,2.3 -5.2,2.5 -8.1,2.7 -0.6,0 -1.3,0.1 -1.9,0.2 h -2.8 c -8.5,4.5 -17.4,7.5 -26.6,10.4 -1.3,0.4 -2.6,0.6 -4,0.6 -3.2,0 -6.2,-1.1 -8.3,-2.9 -2.3,-1.8 -3.7,-4.3 -5,-6.7 -0.5,-1 -1.1,-2 -1.7,-2.9 -0.7,-0.9 -1.9,-1.3 -3.6,-1.3 -0.6,0 -1.2,0 -1.7,0.1 -0.5,0 -1,0.1 -1.5,0.1 -0.8,0 -1.9,-0.1 -2.4,-0.9 l -0.9,-1.5 c -2,-3.4 -4,-6.7 -6,-10.2 -0.5,-0.8 -0.5,-1.8 -0.2,-2.5 0.3,-0.7 0.9,-1.1 1.7,-1.3 3.8,-0.8 7.1,-1.5 10.6,-1.8 3.6,-0.3 6.3,0.6 8.4,3 1.6,1.8 2.8,3.9 4,5.9 2.2,3.7 1.8,4.8 5.3,8 0.1,0.1 2,1.5 4.2,1.7 3.3,0.2 8.9,-2 12.4,-3.7 2.2,-1.3 5.2,-3.5 5.2,-6.6 -0.4,-6.8 -5.5,-11.7 -9.7,-14.7 -6.6,-3.4 -11.9,-7.6 -15.3,-11.9 -1.6,-2.2 -2.4,-4.9 -3.1,-7.4 -0.2,-0.6 -0.3,-1.2 -0.5,-1.8 -0.1,-0.4 -0.5,-0.5 -0.8,-0.5 -0.3,0 -0.7,0.1 -0.9,0.3 -1.7,1.5 -0.7,4.6 0,6.7 l 0.3,0.9 0.1,0.3 c 0.5,1.6 0.8,2.8 -0.2,3.7 -1.5,1.2 -3.5,1.8 -6.3,1.8 -1.2,0 -2.4,-0.1 -3.6,-0.2 -0.7,-0.1 -1.3,-0.1 -1.9,-0.1 -3.4,-0.2 -6.7,-0.8 -9.8,-1.5 -3.6,-0.7 -7.4,-1.5 -11.3,-1.5 -0.9,0 -1.7,0 -2.5,0.1 -2,0.1 -4.3,0.5 -6.7,0.8 -3.1,0.5 -6.4,1 -9.3,1 -4.9,0 -8,-1.5 -9.4,-4.6 -3.1,-7.8 -1.5,-17.1 -0.2,-23.9 0,-0.7 -0.9,-1 -1.3,-1.1 -0.2,-0.1 -0.3,-0.1 -0.4,-0.1 -0.4,0 -0.8,0.2 -1,0.7 -0.9,3.3 -1.4,6.8 -1.9,10.3 -0.6,4.3 -1.3,8.8 -2.7,13 -2.1,6.4 -7.4,14.5 -14.6,18.1 -5.6,2.9 -12,4.4 -20.9,5 -12,0.2 -26.8,2 -35.5,14.4 -0.6,1.1 -0.7,1.4 -0.9,2.3 -0.1,0.4 -0.1,0.8 0.1,1 0.3,0.4 0.9,0.3 1.3,-0.1 8.2,-9.2 19.4,-13.9 33.3,-13.9 h 2.3 c 11.2,0 25.2,-1.5 33.8,-13.2 2.1,-2.4 5.3,-7.7 5.3,-7.7 l 0.2,-0.3 4.9,3.7 -0.1,0.2 c 0,0.1 -2.1,5.4 -3.4,7.8 -1.3,2.6 -4.9,9 -9,11.3 -1,0.5 -2.2,1.2 -3.5,1.9 -2.4,1.2 -5.3,2.8 -8.2,4.4 -2.4,1.4 -5.4,2.1 -8.5,2.1 -1.8,0 -3.6,-0.2 -5.4,-0.7 -3.3,-0.6 -7.5,-1.4 -11.4,-1.4 -3.2,0 -5.7,0.5 -7.9,1.5 -1.7,1.1 -3.4,2.6 -5,4.1 -1,1 -2.1,1.9 -3.1,2.8 -2.4,1.9 -7.4,5.2 -12.6,4.9 -1.1,-0.1 -2.2,-0.4 -3.2,-0.6 -1.2,-0.3 -2.4,-0.6 -3.5,-0.6 -1.3,0 -2.2,0.4 -3,1.3 -1.4,1.3 -2.4,3 -3.3,4.7 -1.5,2.5 -3,5.1 -5.8,6.4 -1.6,0.9 -3.4,1.3 -5.5,1.3 -2.2,0 -4.5,-0.5 -6.6,-1 -1.7,-0.4 -3.2,-0.7 -4.8,-0.8 h -0.4 l 0.1,-0.6 c 0.1,-0.7 0.3,-1.3 0.4,-2 0.9,-4.4 1.9,-8.9 4.8,-12.3 l 0.1,-0.1 h 0.1 c 1.9,-0.2 3.9,-0.6 5.5,-2 2,-1.8 3.6,-4.1 5.1,-6.6 l 0.1,-0.1 c 0.9,-0.6 1.9,-1.1 2.8,-1.7 3.8,-2.2 7.7,-4.5 10.1,-8.3 0.8,-1.8 1.7,-3.9 2.5,-5.9 1.3,-3.4 2.5,-6.3 3.5,-7.4 0.6,-0.6 1.2,-0.9 2.1,-1 0.4,0 1,-0.1 1.9,-0.1 1.7,-0.1 4.1,-0.2 6.3,-0.5 1.4,-0.2 8.8,-2.8 12.5,-6.2 1,-1 1.5,-2.7 1,-4.2 -0.1,-0.5 -0.5,-1.4 -1,-2.5 -1.1,-2.7 -2.8,-6.9 -3.5,-10.3 -0.3,-1.5 -0.5,-5.2 -0.6,-9 -0.1,-2.4 -0.2,-4.8 -0.4,-7 -0.1,-1.1 -0.5,-1.1 -0.7,-1.1 -0.1,0 -0.3,0 -0.5,0.1 -4.8,1.2 -9.8,2.5 -15.1,2.5 -1.7,0 -3.2,-0.1 -4.8,-0.4 -8.9,-1.1 -19.6,-7 -23.5,-17.4 -3,-7.9 -2.7,-20.1 3.8,-27.2 4.9,-6 10.8,-10.9 16.6,-15.7 1.1,-0.9 2.3,-1.9 3.4,-2.8 1.2,-1 1.7,-1.7 1.6,-2.7 -0.2,-1.6 -1.5,-2.9 -2.8,-3.3 -1.4,-0.4 -3,-0.4 -4.3,-0.4 h -1.4 -1.4 c -2.1,0 -4.3,-0.1 -6.5,-1 l -0.9,-0.3 c -6.7,-3.1 -12.8,-10.6 -13.7,-17.9 -0.2,-3.5 0.4,-6.6 2.2,-9.4 4.8,2.6 9,6.8 14.5,8.3 2.1,0.5 4.2,0.8 6.4,1.3 0.3,0.1 0.9,0.1 1.3,0.2 l 0.6,0.1 c 3.4,0.8 12.6,3.1 16.7,7.6 4.1,4.5 4.5,12.8 0.9,17.7 -3.1,4.2 -7.7,8.1 -12.5,12.1 -3,2.5 -6,5.1 -8.7,7.8 -5.7,5.7 -7.8,13 -5.8,20.2 2.1,6.4 8.5,11.2 15.5,11.7 h 0.7 c 9.4,0 16.7,-4.3 24.4,-8.8 0.7,-0.4 1.5,-0.9 2.1,-1.3 1.3,-0.8 4,-2.9 6.1,-4.5 6.2,-4.9 13.6,-10.6 20.5,-12.2 4.6,-1.1 5.4,-1.1 10.2,-1.6 3.4,-0.3 6.6,-0.7 9.5,-1.7 6.4,-2.2 12,-7 17.5,-12 7,-5.7 13.8,-8.1 23.3,-8.1 4.1,0 4.7,-0.5 9.7,-5.2 1.1,-1 2.4,-2.2 4,-3.7 5.4,-5 12.3,-7.1 19,-9.2 3.4,-1.1 6.9,-2.1 10.2,-3.6 4.2,-1.4 8.1,-3.9 11.8,-6.3 2.2,-1.4 4.5,-2.9 6.8,-4.1 3.4,-1.5 7.5,-2.3 11.7,-2.3 3.3,0 6.5,0.5 9.2,1.5 4.2,1.5 6,2.3 11.8,6.3 l 29.3,24.3 0.4,0.4 c 0.5,0.5 1.2,1.1 1.7,1.7 0.9,0.9 17.2,19.9 24,31 2.2,3.7 4,9.4 4.2,12.1 1.3,17.1 6.5,32.5 11.3,45.5 0.2,0.5 1.2,1.4 2.3,2.4 1.3,1.1 2.7,2.4 3.6,3.7 1.3,1.8 2.5,3.8 3.6,5.7 2.9,4.9 6,10 11.2,13 l 4.4,2.2 c 0.7,0.5 0.8,1 0.7,1.6 M 583.5,163 c -1.5,-3 -3,-4.9 -4.5,-5.6 -0.4,-0.2 -0.9,-0.3 -1.4,-0.3 -1,0 -2,0.4 -2.3,1 -1.3,2.1 -0.1,3.6 1.2,5.4 0.6,0.9 1.3,1.8 1.9,3 1.8,3.6 2.7,7.5 4.2,15.3 0.1,0.7 0.6,0.8 0.7,0.8 0.4,0 0.7,-0.4 0.9,-0.9 0.1,-0.1 3.1,-11 -0.7,-18.7 m 49.3,91.9 c -1.4,-0.7 -2.9,-0.2 -2.9,-0.2 -4.6,1.2 -6.9,6 -7.2,6.5 0,0 -0.7,1.3 -0.3,2 0.4,0.6 1.1,0.9 3.1,1 2,0.1 5.7,-0.4 6.7,-1.4 1,-0.9 1.3,-3.2 1.3,-3.2 0,-0.4 0.7,-4 -0.7,-4.7 m 13.8,-32.1 c -0.5,-2.3 -2.5,-6.1 -4.3,-8 -1.8,-1.9 -2.4,-2.9 -3,-3.9 -0.6,-1 -0.1,-0.7 -2.3,-3.4 -1.9,-2.3 -3.6,-2.1 -4.1,-2.1 0,0 -2,-0.1 -3.5,2.1 -0.6,0.8 -2,4.2 -2,4.2 -0.7,1.7 -1.3,2.2 -1.9,4.7 -0.6,2.4 -0.4,3.4 -0.1,4.7 0.2,1.3 0.9,1.4 1.4,1.1 0.5,-0.3 0.5,-0.6 2.1,-2.7 1.4,-1.8 3.2,-2.9 3.9,-2.9 2.8,-0.3 7.6,6 8.6,8.2 0.9,2 1.1,6.8 1.1,6.8 0,0.2 -0.1,2 1.4,2 1.3,0 1.8,-1 2,-1.4 0.2,-0.4 0.7,-1.3 1,-3.1 0.2,-2 0.3,-4 -0.3,-6.3 m -294.4,57.7 c 0.6,0.5 1.4,1.1 2.7,1.1 0.7,0 1.5,-0.2 2.2,-0.6 4.1,-2 8.3,-9.6 8.4,-10 0.4,-1.2 -1,-2.3 -2.7,-3.7 l -0.2,-0.2 c -0.8,-0.6 -2.2,-0.5 -3.1,0.1 -0.7,0.4 -1.3,0.9 -2,1.3 -2.1,1.4 -4.3,2.8 -6.6,4.8 -0.8,0.7 -1.3,2 -1.4,3 -0.1,0.8 0.1,1.5 0.4,1.9 0.3,0.2 1.9,2 2.3,2.3"
     clip-path="url(#SVGID_00000031200753187932598880000001150051991276243373_)"
     id="path36"
     transform="matrix(0.20306865,0,0,0.20306865,-68.164654,4.2536095)"
     sodipodi:nodetypes="cccccccsscccccccccssscccccccccsccssscccccscccccscscsccccccscccccsccccccccsscccccccscssccccccccsccccccccccsscccccccccsccscssccccccscsccscsccccsccccccscccscscccsccccccccccccscscccscccsccscccscccccccccsscccccccccscscccccscccscccccccccccccccccccccccsscscccccccscsccccccccscssccscccccccsccccccscccsccccccccccccsccscsccccccsccccssccccccsccccsscccscccccccccc" />
</svg>
